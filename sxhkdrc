#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty -e tmux

# xflux
super + x
	xflux -z 92808 -k 3600

# scrot 
# super + shift + s
	alacritty -e scrot -e 'mv $f ~/Documents/grad/fall_2020/205/figures' -d 5 -q 100

# Screenshot
# super + shift + s
#	alacritty -e maim ~/shots/$(date +%s).png -m 10 -d 5 -o -i $(xdotool getactivewindow)
#	alacritty -e maim -st 9999999 ~/shots/$(date +%s).png -m 10 -d 5 -o 

## MATLAB in terminal
#super + shift + m
#	alacritty -e tmux attach -t 0 

# MATLAB GUI
super + shift + c
	export _JAVA_AWT_WM_NONREPARENTING=1 && alacritty -e matlab

# firefox
super + w
	firefox


# program launcher
super + d
	rofi -show run	

alt + space
	rofi -show window -window-format{w:}

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# General
#

# Pause/play audio
#super + p
	#mpc toggle
# Play spotify
super + p
	playerctl -p spotify play-pause

# Play previous/next song
super + {comma,period}
	playerctl -p spotify {previous,next}

# Play or pause whatever else
super + shift + p
	playerctl -p firefox play-pause

# Open ncmpcpp
super + alt + n
	bspc desktop --focus ^5 && alacritty -e ncmpcpp & wal -R

# Open bottom
super + alt + b
	alacritty -e btm -agm 
	# alacritty -e btm -agm & wal -R

## Open vis
#super + alt + v
#	bspc desktop --focus ^5 && alacritty -e vis & wal -R

# Open Mullvad-VPN
super + alt + m
	bspc desktop --focus ^9 && mullvad-vpn state=pusedo_tiled

# Reload Xresources
#super + x
#	xrdb ~/.Xresources 


# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + shift + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# focus or send to next/previous desktop
super + {_,shift +}bracket{left,right}
	bspc {desktop -f, node -d} {prev,next}.local

# swap 
# super + {_,ctrl +shift +}bracket{left,right}
#	bspc {desktop -s node -d} {prev,next}.local
#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# (rotate clockwise/counterclockwise)/balance
super + {_,shift,alt} + e
  bspc node $(bspc query -N -n -n .!leaf || echo @/) {-R 90,-R 270,-B}

# send node where I fucking want it
super + shift +  s
  bspc node -n  'last.!automatic.local'

## minimize windows
#super + alt + shift + m
#  D=$(bspc query –desktops –desktop focused); 
#  if bspc query –desktops | grep -q “‘$D”; then 
#    for i in $(bspc query –windows –desktop '$D); do 
#      bspc window $i –to-desktop $D; 
#      break; 
#    done; 
#    bspc window $i –focus; 
#    bspc window –swap biggest; 
#    (( $(bspc query –windows –desktop '$D | wc -l) )) || bspc desktop '$D –remove; 
#  fi
#
## restore minimized windows
#super + shift + m
#  D=$(bspc query –desktops –desktop focused); 
#  if bspc query –desktops | grep -q “‘$D”; then 
#    for i in $(bspc query –windows –desktop '$D); do 
#      bspc window $i –to-desktop $D; 
#      bspc window $i –focus; 
#      bspc window –swap biggest; 
#    done; 
#    bspc desktop '$D –remove; 
#  fi
#
#
#
## hide window
#super + v
#  bspc node -g hidden
#
## unhide window
#super + shift + v
#  bspc node {,$(bspc query -N -n .hidden | tail -n1)} -g hidden=off

# move focused window to desktop and focus on that window again
# move focused window to the next workspace and then switch to that workspace
alt + shift + {h,l}
    id=$(bspc query --nodes --node); bspc node --to-desktop {prev,next}; bspc desktop --focus next; bspc node --focus ${id}


# send to background & hide
#super + F6
super + v 
	w=$(bspc query -N -n focused.local.!below); \
	if [ -n "$w" ]; then \
		bspc node $w.tiled -t fullscreen; \
		bspc node $w -l below; \
		bspc node $w -g hidden=on; \
	fi
#super + {_,ctrl + }shift + F6
super + {_,ctrl + }shift + v
	w=$(bspc query -N -n .hidden.local.below | while read i; \ 
		do echo $i $(xprop -id $i | fgrep NET_WM_NAME | \
		sed 's/^[^=]* = //'); done | {head -n 1,rofi -dmenu}); \
	if [ -n "$w" ]; then \
		w=$(echo $w | cut -d ' ' -s -f 1); \
		bspc node "$w" -g hidden=off; \
		bspc node $w.fullscreen -t tiled; \
		bspc node $w -l normal; \
		bspc node -f $w; \
	fi

# hide background windows
super + F7
	for i in $(bspc query -N -n .below.local); do \
		bspc node "$i" -g hidden=on; \
	done

# show hidden windows
super + shift + F7
	for i in $(bspc query -N -n .hidden.local); do \
		bspc node "$i" -g hidden=off; \
	done

# toggle above
super + F5
	bspc node focused.normal -l above || \
	bspc node focused.above -l normal

# revert above for this desktop
super + shift + F5
	for w in $(bspc query -N -n .above.local); do \
		bspc node "$w" -l normal; \
	done

# change focus in monocle layout
super + ctrl + {u}
	bspc node -f {next}.local

# Add focused window to a tabbed instance in given direction
super + t; {h,j,k,l}
    tabc.sh $(bspc query -N -n {west,south,north,east}) add $(bspc query -N -n focused)

# Remove one tab from tabbed
super + t; r
    tabbed=$(bspc query -N -n focused); \
    child=$(tabc.sh $tabbed list | head -n1); \
    tabc.sh $tabbed remove $child
